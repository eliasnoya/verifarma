FROM alpine:3.18.3

WORKDIR /api

ENV TZ=UTC

# Install Nginx and PHP
RUN apk --no-cache add tzdata \
    nginx \ 
    php82 \
    php82-fpm \
    php82-ctype \ 
    php82-curl \
    php82-dev \
    php82-dom \ 
    php82-gd \
    php82-intl \
    php82-json \
    php82-tokenizer \
    php82-xmlwriter \
    php82-fileinfo \
    php82-mbstring \
    php82-mysqli \
    php82-pdo \
    php82-opcache \
    php82-pdo_mysql \
    php82-openssl \
    php82-pear \
    php82-phar \
    php82-session \
    php82-simplexml  \
    php82-xml \
    php82-xmlreader \
    php82-zip  \
    php82-zlib \
    busybox-extras \
    curl \
    mysql-client \
    nano \ 
    supervisor

# link php82 to php
RUN ln -s /usr/bin/php82 /usr/bin/php

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Configure NGINX & PHP-FPM & PHP
COPY docker/nginx.conf /etc/nginx/nginx.conf 
COPY docker/fpm-pool.conf /etc/php82/php-fpm.d/www.conf
COPY docker/php.ini /etc/php82/conf.d/api.ini

# Configure SUPERVISOR
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

COPY . .

# Install dependencies
RUN composer install 
RUN php artisan config:clear

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /api /run /var/lib/nginx /var/log/nginx

EXPOSE 8000

USER nobody

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8000/fpm-ping